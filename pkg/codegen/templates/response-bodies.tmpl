type Response struct {
    body interface{}
    statusCode int
    contentType string
}

func (resp *Response) Render(w http.ResponseWriter, r *http.Request) error {
    w.Header().Set("Content-Type", resp.contentType)
    render.Status(r, resp.statusCode)
    return nil
}

func (resp *Response) Status(statusCode int) *Response {
    resp.statusCode = statusCode
    return resp
}

func (resp *Response) ContentType(contentType string) *Response {
    resp.contentType = contentType
    return resp
}

func (resp *Response) MarshalJSON() ([]byte, error) {
    return json.Marshal(resp.body)
}

func (resp *Response) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.Encode(resp.body)
}

{{range .}}{{$opid := .OperationId}}{{$op := .}}
{{range getResponseTypeDefinitions .}}

func New{{$opid | ucFirst}}{{.ResponseName | camelCase}}Response(body {{.Schema.TypeDecl}}) *Response {
    return &Response{
            body: body,
            statusCode: {{.ResponseName | statusCode}},
            contentType: "{{.ContentTypeName}}",
    }
}

{{end}}
{{end}}